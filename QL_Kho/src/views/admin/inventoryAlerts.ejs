<%- include('../partials/admin/header') %>
  <link rel="stylesheet" href="/css/admin/inventoryAlerts.css">
  <div class="inventory-warning-container">
    <div class="warning-header">
      <h1 class="warning-title">Inventory Alert</h1>
      <div class="warning-threshold">

        <!-- Form to set the threshold for inventory alerts -->
        <form method="GET" action="/admin/inventory/alerts" class="mb-4 form-set-value-threshold">
          <div class="form-group row align-items-center">
            <label for="threshold" class="col-md-2 col-form-label">Warning threshold:</label>
            <div class="col-md-6">
              <div class="input-group">
                <input type="number" class="form-control" id="threshold" name="threshold" value="<%= threshold %>"
                  min="0" max="100000000000" placeholder="Enter warning threshold" oninput="handleInput()">
              </div>
            </div>
            <div class="col-md-2">
              <button type="submit" class="btn btn-primary w-100" id="submitBtn">Apply</button>
            </div>
          </div>
          <div class="row mt-2 form-group">
            <div class="col-md-8 offset-md-2">
              <div class="threshold-display card p-3">
                <div class="d-flex justify-content-between">
                  <span class="text-muted">Value:</span>
                  <strong id="formattedDisplay">
                    <%= helpers.formatCurrency(threshold) %>
                  </strong>
                </div>
                <div class="d-flex justify-content-between mt-2">
                  <span class="text-muted">In words:</span>
                  <strong id="wordOutput">
                    <%= convertNumberToWords(threshold) %>
                  </strong>
                </div>
              </div>
            </div>
          </div>
        </form>
      </div>
    </div>

    <div class="warning-card">
      <div class="card-content">
        <% if (products.length===0) { %>
          <div class="no-warning-alert">
            No items exceed inventory threshold
          </div>
          <% } else { %>
            <div class="table-responsive-wrapper">
              <table class="inventory-table">
                <thead class="table-header-light">
                  <tr>
                    <th>Product Code</th>
                    <th>Item Name</th>
                    <th>Quantity</th>
                    <th>Unit</th>
                    <th>Unit Price</th>
                    <th>Total Value</th>
                  </tr>
                </thead>
                <tbody>
                  <% products.forEach(product=> { %>
                    <tr class="<%= (product.total_value > threshold * 2) ? 'row-danger' : 'row-warning' %>">
                      <td>
                        <%= product.product_code %>
                      </td>
                      <td>
                        <%= product.name %>
                      </td>
                      <td>
                        <%= product.quantity %>
                      </td>
                      <td>
                        <%= product.unit %>
                      </td>
                      <td>
                        <%= helpers.formatCurrency(product.price) %> VNĐ
                      </td>
                      <td><b>
                          <%= helpers.formatCurrency(product.total_value) %> VNĐ
                        </b></td>
                    </tr>
                    <% }) %>
                </tbody>
              </table>
            </div>
            <% } %>
      </div>
    </div>
  </div>
  <script src="/js/darkmode/share/inventoryAlerts.js"></script>
  <!DOCTYPE html>
  <html lang="en">

  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Number to Words</title>
    <style>
      body {
        font-family: Arial, sans-serif;
        padding: 20px;
      }

      .form-control {
        margin-bottom: 10px;
        padding: 10px;
        width: 100%;
        max-width: 300px;
      }

      .output {
        margin-top: 10px;
        font-weight: bold;
      }
    </style>
  </head>

  <body>
    <script>
      // Hàm chuyển số thành chữ
      function convertNumberToWords(num) {
        if (isNaN(num) || num < 0) return 'Invalid';
        if (num === 0) return 'Zero dong';

        const units = ['', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];
        const teens = ['ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'];
        const tens = ['', 'ten', 'twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];
        const scales = ['', 'thousand', 'million', 'billion'];

        function convertChunk(chunk) {
          if (chunk === 0) return '';
          let str = '';
          const hundred = Math.floor(chunk / 100);
          const remainder = chunk % 100;

          if (hundred > 0) {
            str += units[hundred] + ' hundred ';
          }

          if (remainder > 0) {
            if (remainder < 10) {
              str += units[remainder];
            } else if (remainder < 20) {
              str += teens[remainder - 10];
            } else {
              const ten = Math.floor(remainder / 10);
              const unit = remainder % 10;
              str += tens[ten];
              if (unit > 0) {
                str += ' ' + units[unit];
              }
            }
          }

          return str.trim();
        }

        let words = '';
        let scaleIndex = 0;
        let firstChunk = true;

        while (num > 0) {
          const chunk = num % 1000;
          if (chunk !== 0) {
            let chunkWords = convertChunk(chunk);
            if (scaleIndex > 0) {
              chunkWords += ' ' + scales[scaleIndex];
            }
            words = chunkWords + (firstChunk ? '' : ' ') + words;
            firstChunk = false;
          }
          num = Math.floor(num / 1000);
          scaleIndex++;
        }

        return words ? words + ' Dong' : '';
      }

      // Xử lý input với debounce
      let timeout;
      function handleInput() {
        clearTimeout(timeout);
        timeout = setTimeout(updateDisplay, 300);
      }

      // Cập nhật hiển thị
      function updateDisplay() {
        const input = document.getElementById('threshold');
        const number = parseInt(input.value) || 0;

        // Format số
        document.getElementById('formattedDisplay').textContent =
          new Intl.NumberFormat('vi-VN').format(number) + ' VNĐ';

        // Chuyển sang chữ
        document.getElementById('wordOutput').textContent =
          convertNumberToWords(number);
      }

      // Xử lý submit form
      document.getElementById('thresholdForm')?.addEventListener('submit', function (e) {
        const btn = document.getElementById('submitBtn');
        btn.disabled = true;
        btn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Đang xử lý...';
      });

      // Khởi tạo khi tải trang
      document.addEventListener('DOMContentLoaded', function () {
        updateDisplay();
      });
    </script>
  </body>

  </html>

  <%- include('../partials/admin/footer') %>